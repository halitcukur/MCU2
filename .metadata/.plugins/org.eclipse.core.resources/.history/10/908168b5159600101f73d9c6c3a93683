/*
 * main.c
 *
 *  Created on: Sep 19, 2025
 *      Author: halit
 */

#include "main.h"
#include <string.h>

#define TRUE 	1
#define FALSE 	0

void UART2_Init(void);
void Error_Handler(void);
void convert_to_capital(uint8_t *data);

UART_HandleTypeDef huart2;

char *userdata = "The application is running\r\n";

uint8_t data_buffer[100];
uint8_t rcvd_data;
uint32_t count = 0;
uint8_t reception_complete;

int main(void)
{
	HAL_Init();
	UART2_Init();

	uint16_t len_of_data = strlen(userdata);

	HAL_UART_Transmit(&huart2, (uint8_t *) userdata, len_of_data, HAL_MAX_DELAY);


	while(1)
	{
		HAL_UART_Receive_IT(&huart2, &rcvd_data, 1);
		if(reception_complete = TRUE)
		{
			reception_complete = FALSE;
			memset(data_buffer, 0, 100);
		}
	}
}

void UART2_Init(void)
{
	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.Mode = UART_MODE_TX_RX;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;

	if(HAL_UART_Init(&huart2) != HAL_OK)
	{
		Error_Handler();
	}
}

void convert_to_capital(uint8_t *data)
{
	while(*data != '\r')
	{
		if(*data >= 'a' && *data <= 'z')
		{
			*data -= 32;
		}
		data++;
	}
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	if(rcvd_data == '\r')
	{
		reception_complete = TRUE;
		data_buffer[count++] = '\r';
		data_buffer[count++] = '\n';
		convert_to_capital(data_buffer);
		HAL_UART_Transmit(huart, data_buffer, count, HAL_MAX_DELAY);
	}
	else
	{
		data_buffer[count++] = rcvd_data;
	}
}

void Error_Handler(void)
{
	__disable_irq();
	while(1);
}
